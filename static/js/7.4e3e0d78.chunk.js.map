{"version":3,"sources":["pictures/user.png","components/Users/users.module.scss","common/Paginator/Paginator.module.css","redux/users-selectors.tsx","common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","components/Users/UsersType.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","getUsers","createSelector","state","usersPage","users","filter","u","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingProgress","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","classes","paginator","onClick","p","map","cn","selectedPage","pageNumber","key","e","User","props","user","unfollow","follow","userBlock","userAvatar","to","id","src","photos","small","userPhoto","img","userData","userName","name","status","followed","disabled","some","UsersSearchFormVAlidate","values","UsersSearchForm","React","memo","Formik","initialValues","term","friend","validate","onSubmit","setSubmitting","onFilterChange","isSubmitting","inputLogo","placeholder","formField","type","as","value","Users","main","UsersContainer","this","Preloader","Component","compose","connect","requestUsers"],"mappings":"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","file":"static/js/7.4e3e0d78.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"users_img__38KO5\",\"main\":\"users_main__3p8xa\",\"userBlock\":\"users_userBlock__1g6EV\",\"userAvatar\":\"users_userAvatar__1wctj\",\"userData\":\"users_userData__1UDFn\",\"userName\":\"users_userName__14w7_\",\"Formik\":\"users_Formik__1Ohkl\",\"inputLogo\":\"users_inputLogo__2icsV\",\"formField\":\"users_formField__3Fq9i\",\"before\":\"users_before__QHhej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__9VR0Z\",\"pageNumber\":\"Paginator_pageNumber__1KI2q\",\"selectedPage\":\"Paginator_selectedPage__12IcS\"};","import {createSelector} from \"reselect\";\r\nimport { userType } from \"../types/types\";\r\nimport { AppReducersType } from \"./redux-store\";\r\n\r\n\r\n\r\nconst getUsersSelector = (state: AppReducersType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state: AppReducersType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppReducersType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state: AppReducersType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state: AppReducersType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: AppReducersType) => {\r\n    return state.usersPage.followingProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state: AppReducersType) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React, { useState } from 'react'\r\nimport classes from './Paginator.module.css';\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = { totalItemsCount: number, pageSize: number, currentPage: number, onPageChanged: (pageNumber: number) => void, portionSize?: number }\r\n\r\nlet Paginator: React.FC<PropsType> = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={classes.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <a className=\r\n                    {cn({\r\n                        [classes.selectedPage]:\r\n                            currentPage === p\r\n                    },\r\n                        classes.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p)\r\n                    }}>{p}</a>\r\n            })\r\n        }\r\n        {portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React, { Props } from 'react';\r\nimport userPhoto from \"../../pictures/user.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { userType } from '../../types/types';\r\nimport classes from './users.module.scss';\r\n\r\ntype PropsType = {\r\n    user: userType\r\n    followingProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = (props) => {\r\n    let { user, followingProgress, unfollow, follow } = props\r\n    debugger\r\n    return (\r\n        <div className={classes.userBlock}>\r\n            <NavLink className={classes.userAvatar} to={'/profile/' + user.id}>\r\n                <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                    className={classes.img} />\r\n            </NavLink>\r\n            <div className={classes.userData}>\r\n                <div className={classes.userName}>{user.name}</div>\r\n                <div>{user.status}</div>\r\n                <div>{\"user.location.country\"}</div>\r\n                <div>{\"user.location.city\"}</div>\r\n                {user.followed\r\n                    ? <button disabled={followingProgress\r\n                        .some(id => id === user.id)}\r\n                        onClick={() => { unfollow(user.id) }}>\r\n                        Unfollow</button>\r\n                    : <button disabled={followingProgress\r\n                        .some(id => id === user.id)}\r\n                        onClick={() => { follow(user.id) }}>\r\n                        Follow</button>}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { FilterType } from '../../redux/usersReducer';\r\nimport classes from './users.module.scss';\r\n\r\ntype ValidateType = {\r\n    values: any\r\n    email: string\r\n}\r\n\r\nconst UsersSearchFormVAlidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\n\r\ntype PropsType = {\r\n    onFilterChange: (filter: FilterType) => void\r\n}\r\ntype FormData = {\r\n    term: string\r\n    friend: 'null' | 'true' | 'false'\r\n}\r\nconst UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n    const submit = (values: FormData, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n\r\n        }\r\n        props.onFilterChange(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Formik className={classes.Formik}\r\n            initialValues={{ term: '', friend: 'null' }}\r\n            validate={UsersSearchFormVAlidate}\r\n            onSubmit={submit}>\r\n            {({ isSubmitting }) => (\r\n                <Form className={classes.Formik}>\r\n                    <i className={classes.inputLogo}>dsadsadsdsa</i>\r\n                    <Field placeholder='Find user' className={classes.formField} type=\"text\" name=\"term\" />\r\n                    <Field name=\"friend\" as=\"select\" placeholder=\"Favorite Color\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n});\r\n\r\nexport default UsersSearchForm;","import React from 'react';\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport { userType } from '../../types/types';\r\nimport { FilterType } from '../../redux/usersReducer';\r\nimport UsersSearchForm from './UsersSearchForm'\r\nimport classes from './users.module.scss'\r\ntype PropsType = {\r\n    currentPage: number,\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    onPageChanged: (pageNumber: number) => void,\r\n    users: Array<userType>,\r\n    followingProgress: Array<number>,\r\n    unfollow: (userId: number) => void,\r\n    onFilterChange: (filter: FilterType) => void\r\n    follow: (userId: number) => void\r\n}\r\nlet Users: React.FC<PropsType> = ({ currentPage, totalUsersCount, pageSize, onFilterChange, onPageChanged, users, ...props }) => {\r\n    return <div className={classes.main}>\r\n        <UsersSearchForm onFilterChange={onFilterChange} />\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n            totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                    followingProgress={props.followingProgress}\r\n                    key={u.id}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react'\r\nimport Preloader from '../../common/Preloader';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors';\r\nimport { compose } from 'redux';\r\n\r\nimport { requestUsers, follow, unfollow, FilterType } from '../../redux/usersReducer';\r\nimport Users from './UsersType';\r\nimport { userType } from '../../types/types';\r\nimport { AppReducersType } from '../../redux/redux-store';\r\nimport { connect } from 'react-redux';\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<userType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: Array<number>\r\n    filter: FilterType\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number, filter: FilterType) => void\r\n    unfollow: (userId: number) => void,\r\n    follow: (userId: number) => void\r\n}\r\ntype OwnToProps = {\r\n\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const { currentPage, pageSize, filter } = this.props\r\n        this.props.getUsers(currentPage, pageSize, filter)\r\n    }\r\n    onPageChanged = (pageNumber: number) => {\r\n        const { pageSize, filter } = this.props;\r\n        this.props.getUsers(pageNumber, pageSize, filter)\r\n    }\r\n    onFilterChange = (filter: FilterType) => {\r\n        const { pageSize } = this.props\r\n        this.props.getUsers(1, pageSize, filter)\r\n    }\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                onFilterChange={this.onFilterChange}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingProgress={this.props.followingProgress} />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppReducersType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingInProgress(state),\r\n        filter: state.usersPage.filter\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnToProps, AppReducersType>(mapStateToProps, { follow, unfollow, getUsers: requestUsers })\r\n)(UsersContainer)"],"sourceRoot":""}