{"version":3,"sources":["common/Formcontrols/FormControl.js","common/Formcontrols/FormControl.module.css","utils/validators.js","components/Login/Login.jsx"],"names":["FormControl","input","meta","touched","error","children","hasError","className","classes","formControl","TextArea","props","restProps","child","createField","placeHolder","name","validators","component","text","placeholder","validate","module","exports","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"8QAIMA,EAAc,SAAC,GAAkD,EAAhDC,MAAiD,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SAC9CC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAQC,YAAc,KAAOH,EAAWE,IAAQJ,MAAQ,KACpE,6BACKC,GAEJC,GAAY,8BAAOF,KAKnBM,EAAW,SAACC,GAAW,IACxBV,EAAqCU,EAArCV,MAAuBW,GAAcD,EAA9BT,KAA8BS,EAAxBE,MADU,YACcF,EADd,2BAE/B,OAAO,kBAACX,EAAgBW,EAAO,8CAAcV,EAAWW,MAE/CX,EAAQ,SAACU,GAAW,IACrBV,EAAqCU,EAArCV,MAAuBW,GAAcD,EAA9BT,KAA8BS,EAAxBE,MADO,YACiBF,EADjB,2BAE5B,OAAO,kBAACX,EAAgBW,EAAO,2CAAWV,EAAWW,MAG5CE,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAsC,IAA3BP,EAA0B,uDAAlB,GAAIQ,EAAc,uDAAP,GACtF,OAAO,6BACF,kBAAC,IAAD,eACAC,YAAeL,EACfC,KAAQA,EACRK,SAAYJ,EACZC,UAAaA,GACTP,IANF,IAMaQ,K,oBC/BvBG,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,iBAAmB,wC,iCCDvH,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCNlC,+FAqBME,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAZL,SAACnB,GACf,OACI,0BAAMqB,SAAUrB,EAAMsB,cACjBnB,YAAY,QAAS,QAAS,CAACU,KAAWvB,KAC1Ca,YAAY,WAAY,WAAY,CAACU,KAAWvB,IAAO,CAAEiC,KAAM,aAC/DpB,YAAY,KAAM,aAAc,GAAIb,IAAO,CAAEiC,KAAM,aACnDvB,EAAMP,OAAS,yBAAKG,UAAWC,IAAQ2B,kBAAmBxB,EAAMP,OACjE,mCAAQ,yCAAR,SA2BGgC,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EApBD,SAACzB,GAKX,OAAIA,EAAM2B,OACC,kBAAC,IAAD,CAAUG,GAAI,cAGrB,6BACI,qCACA,kBAACZ,EAAD,CAAgBG,SAVT,SAACU,GACZ/B,EAAM6B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.d7a41bad.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport classes from './FormControl.module.css'\r\nimport { Field } from 'redux-form'\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeHolder, name, validators, component, props = {}, text = \"\") => {\r\n   return <div>\r\n        <Field \r\n        placeholder = {placeHolder} \r\n        name = {name}\r\n        validate = {validators}\r\n        component = {component}\r\n        {...props} /> {text}\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__3TCNf\",\"error\":\"FormControl_error__Csc7B\",\"formSummaryError\":\"FormControl_formSummaryError__3N4Tn\"};","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","import React from 'react'\r\nimport { createField, input } from '../../common/Formcontrols/FormControl'\r\nimport { required } from '../../utils/validators'\r\nimport classes from '../../common/Formcontrols/FormControl.module.css'\r\nimport { reduxForm } from 'redux-form'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {login} from '../../redux/auth-reducer'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField('Email', 'email', [required], input)}\r\n            {createField('Password', 'password', [required], input, { type: 'password' })}\r\n            {createField(null, 'rememberMe', [], input, { type: 'checkbox' })}\r\n            {props.error && <div className={classes.formSummaryError}>{props.error}</div>}\r\n            <div>   <button>Login</button> </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    \r\n    if (props.isAuth) {\r\n        return <Redirect to={'./profile'} />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login}) (Login)\r\n"],"sourceRoot":""}