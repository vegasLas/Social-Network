{"version":3,"sources":["utils/object-helers.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","components/NavBar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","hoc/Suspense.jsx","App.js","serviceWorker.js","index.js","redux/auth-reducer.js","components/Header/Header.module.css","redux/profile-reducer.js","common/Preloader.js","redux/dialogs-reducer.js","redux/usersReducer.js","api/api.js","pictures/loader.gif","common/Preloader.module.css","pictures/logo.png","components/NavBar/Navbar.module.css"],"names":["updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","initialState","initialized","appReducer","state","action","type","sidebarReducer","reducers","combineReducers","auth","authReducer","dialogsPage","dialogsReducer","profilePage","profileReducer","sidebarPage","usersPage","usersReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","props","className","classes","nav","item","to","activeClassName","activeLink","Header","header","logo","src","loginBlock","isAuth","login","onClick","logout","HeaderContainer","this","Component","connect","createSuspense","fallback","Login","React","lazy","ProfileContainer","UsersContainer","DialogsContainer","App","initializeApp","path","render","Preloader","AppConteiner","withRouter","dispatch","promise","getAuthUserData","Promise","all","then","MainApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","userid","email","setAuthUserData","payload","a","authAPI","me","response","data","resultCode","id","password","rememberMe","messages","length","stopSubmit","_error","module","exports","posts","likesCount","profile","status","addPostActionCreator","newPostText","setStatus","getInformationProfile","userID","authorizedUserId","history","userId","getUserProfile","getStatus","usersAPI","getProfile","profileAPI","updateStatus","newPost","filter","p","postId","style","backgroundColor","loader","preloader","dialogs","name","isSituation","sendMessageCreator","newMessageBody","body","require","default","users","pageSize","totalUsersCount","currentPage","isFetching","followingProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFillowingProgress","requestUsers","page","getUsers","res","totalCount","followUngollowFlow","apiMethod","actionCreator","follow","bind","unfollow","followed","instance","axios","withCredentials","baseURL","headers","get","post","delete","warn","put"],"mappings":"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","file":"static/js/main.318afa41.chunk.js","sourcesContent":["export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    }\r\n    )}","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess =() => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n    .then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import authReducer from \"./auth-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport { reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nimport { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react'\r\nimport classes from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className = {classes.item}>\r\n                <NavLink to = '/profile' activeClassName = {classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className = {classes.item}>\r\n                <NavLink to = '/dialogs' activeClassName = {classes.activeLink}>Dialogs</NavLink>\r\n            </div>\r\n            <div className = {classes.item}>\r\n                <NavLink to = '/users' activeClassName = {classes.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className = {classes.item}>\r\n                <NavLink to = '/news' activeClassName = {classes.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className = {classes.item}>\r\n                <NavLink to = '/music' activeClassName = {classes.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className = {classes.item}>\r\n                <NavLink to = '/setings' activeClassName = {classes.activeLink}>Setings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport logo from '../../pictures/logo.png'\r\nimport classes from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    \r\n    return <header className = {classes.header}>\r\n        <img className = {classes.logo} src={logo} />\r\n        <div className={classes.loginBlock}>\r\n        {props.isAuth\r\n            ? <div>{props.login} -<button onClick={props.logout}>Log out</button></div>\r\n            : <NavLink to={'/login'}>Login</NavLink>\r\n        }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\nimport Header from './Header';\r\n\r\n\r\nclass HeaderContainer extends Component {\r\n    render () {\r\n        return <Header \r\n        isAuth = {this.props.isAuth}\r\n        login = {this.props.login}\r\n        logout = {this.props.logout}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer)","import React, { Suspense } from 'react'\r\n\r\nconst createSuspense = (Component) => {\r\n    return  (props) => {\r\n    return <Suspense fallback={<div>Loading...</div>}>\r\n        <Component {...props} />\r\n    </Suspense>\r\n    }\r\n}\r\n\r\nexport default createSuspense","import React, { Component, Suspense } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport { connect, Provider } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport store from \"./redux/redux-store\";\nimport Preloader from './common/Preloader';\nimport Navbar from './components/NavBar/Navbar';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport createSuspense from './hoc/Suspense';\nconst Login = React.lazy(() => import('./components/Login/Login'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/profile/:userId?'\n            render={createSuspense(ProfileContainer)} />\n          <Route path='/login'\n            render={createSuspense(Login) } />\n          <Route path='/users'\n            render={createSuspense(UsersContainer) } />\n          <Route path='/dialogs'\n            render={createSuspense(DialogsContainer) } />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\nlet AppConteiner = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App)\n\nconst MainApp = (props) => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppConteiner />\n      </Provider>\n    </BrowserRouter>\n  )\n\n}\n\nexport default MainApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport MainApp from './App';\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { authAPI } from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    userid: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userid, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, \r\n    payload: {userid, email, login, isAuth}\r\n})\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    }\r\n    else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] :  'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if  (response.data.resultCode === 0 ) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3-e1q\",\"logo\":\"Header_logo__3RQHb\",\"loginBlock\":\"Header_loginBlock__1JHeJ\"};","import { usersAPI, profileAPI } from \"../api/api\"\r\n\r\n\r\nconst ADD_POST = 'ADD_POST'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'first', likesCount: 12 },\r\n        { id: 2, message: 'TRATATTA', likesCount: 11 },\r\n        { id: 3, message: 'Pleti your live', likesCount: 11 },\r\n        { id: 4, message: 'ccC', likesCount: 11 }\r\n    ],\r\n    profile: null,\r\n    status: \" \"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state, posts: state.profile.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\n\r\nexport const getInformationProfile = (userID, authorizedUserId, history) => (dispatch) => {\r\n    let userId = userID\r\n     if (!userId) {\r\n        userId = authorizedUserId;\r\n        /* if (!userID) {\r\n            history.push(\"/login\");\r\n        }  */\r\n    }\r\n    dispatch(getUserProfile(userId));\r\n    dispatch(getStatus(userId));\r\n}\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data))\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer","import React from 'react';\r\nimport preloader from '../pictures/loader.gif';\r\nimport classes from './Preloader.module.css';\r\n\r\nlet Preloader = () => { \r\n    return <div style = { {backgroundColor: 'white'}} >\r\n        <img className = {classes.loader} src = {preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Pantiley'},\r\n        {id: 2, name: 'Skrepka'},\r\n        {id: 3, name: 'Felix'},\r\n        {id: 4, name: 'Toro'},\r\n        {id: 5, name: 'Viking'},\r\n        {id: 6, name: 'Axiles'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi', isSituation: true},\r\n        {id: 2, message: 'How is your nothing?0', isSituation: false},\r\n        {id: 3, message: 'AWESOME', isSituation: true},\r\n        {id: 4, message: 'WO WO', isSituation: false},\r\n        {id: 5, message: 'What did you think?', isSituation: true}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages:\r\n                [...state.messages, {id: 6, message: body, isSituation: false}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","import { usersAPI } from \"../api/api\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nconst { updateObjectInArray } = require(\"../utils/object-helers\")\r\nconst { default: actions } = require(\"redux-form/lib/actions\")\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return { ...state, users: updateObjectInArray(state.users, action.userId, 'id', { followed: true }) }\r\n        case UNFOLLOW:\r\n            return { ...state, users: updateObjectInArray(state.users, action.userId, 'id', { followed: false }) }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingProgress: action.isFetching\r\n                ? [...state.followingProgress, action.userId]\r\n                : state.followingProgress.filter(id => id != action.userId)\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleIsFillowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n\r\n    let res = await usersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(res.data.items))\r\n    dispatch(setTotalUsersCount(res.data.totalCount))\r\n}\r\nconst followUngollowFlow = async (dispatch, userId, apiMethod, actionCreator) =>{\r\n    dispatch(toggleIsFillowingProgress(true, userId))\r\n    let res = await apiMethod(userId);\r\n\r\n    if (res.data.resultCode === 0 ) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFillowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUngollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n} \r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUngollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n} \r\nexport default usersReducer","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': 'e9637b51-b5a1-4a70-b6f3-bc4dbbc932f7'}\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/loader.8b9984fd.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__3Ji00\"};","module.exports = __webpack_public_path__ + \"static/media/logo.9e539386.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3JO-u\",\"item\":\"Navbar_item__3M8CF\",\"activeLink\":\"Navbar_activeLink__2LwWY\"};"],"sourceRoot":""}